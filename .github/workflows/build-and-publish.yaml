name: Docker

on:
  push:
    tags:
      - "v*.*.*" # Trigger on semver tags
  pull_request:
    branches:
      - "main" # Trigger on pull requests to the main branch
  workflow_dispatch: # Manual trigger

jobs:
  build:
    runs-on: downloader
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history, including tags. Not good for large repos.

      - name: Extract Semver Tag
        id: extract-tag
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "TAG=${{ github.ref }}" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Fetch the latest tag, if any
            latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            if [[ -n "$latest_tag" ]]; then
              echo "TAG=$latest_tag" >> $GITHUB_ENV
            else
              echo "No tags found."
              echo "TAG=" >> $GITHUB_ENV
            fi
          else
            echo "No semver tag detected."
            echo "TAG=" >> $GITHUB_ENV
          fi

      - name: Log in to ${{ vars.REGISTRY_URL }}
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ vars.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@dbef88086f6cef02e264edb7dbf63250c17cef6c # v5.5.0
        with:
          images: ${{ vars.REGISTRY_URL }}/${{ github.repository }}
          tags: |
            type=version,value=${{ env.TAG || 'latest' }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: ${{ env.TAG != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        if: ${{ env.TAG != '' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ vars.REGISTRY_URL }}/${{ github.repository }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
